# Generated by Django 5.2.4 on 2025-07-22 20:29

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('main_app', '0002_alarm_auditlog_connectionlog_opcuaserver_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DataServer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre del servidor')),
                ('server_type', models.CharField(choices=[('OPC_UA', 'OPC-UA'), ('OPC_CLASSIC', 'OPC Classic'), ('WEBSOCKET', 'WebSocket'), ('MODBUS', 'Modbus TCP'), ('MQTT', 'MQTT')], max_length=20, verbose_name='Tipo de servidor')),
                ('endpoint_url', models.CharField(max_length=500, verbose_name='URL/Endpoint del servidor')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descripción')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('username', models.CharField(blank=True, max_length=100, null=True, verbose_name='Usuario')),
                ('password', models.CharField(blank=True, max_length=100, null=True, verbose_name='Contraseña')),
                ('connection_config', models.JSONField(blank=True, default=dict, verbose_name='Configuración de conexión')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de actualización')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
            ],
            options={
                'verbose_name': 'Servidor de Datos',
                'verbose_name_plural': 'Servidores de Datos',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DataVariable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=500, verbose_name='Dirección/NodeID/Tag')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre de la variable')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descripción')),
                ('data_type', models.CharField(choices=[('BOOLEAN', 'Boolean'), ('INTEGER', 'Entero'), ('FLOAT', 'Decimal'), ('STRING', 'Texto'), ('DATETIME', 'Fecha y hora'), ('ARRAY', 'Array'), ('JSON', 'JSON Object')], max_length=20, verbose_name='Tipo de dato')),
                ('unit', models.CharField(blank=True, max_length=20, null=True, verbose_name='Unidad')),
                ('min_value', models.FloatField(blank=True, null=True, verbose_name='Valor mínimo')),
                ('max_value', models.FloatField(blank=True, null=True, verbose_name='Valor máximo')),
                ('is_writable', models.BooleanField(default=False, verbose_name='Es escribible')),
                ('is_monitored', models.BooleanField(default=True, verbose_name='Es monitorizada')),
                ('sampling_interval', models.IntegerField(default=1000, verbose_name='Intervalo de muestreo (ms)')),
                ('protocol_config', models.JSONField(blank=True, default=dict, verbose_name='Configuración del protocolo')),
                ('alarm_enabled', models.BooleanField(default=False, verbose_name='Alarmas habilitadas')),
                ('alarm_high_limit', models.FloatField(blank=True, null=True, verbose_name='Límite alto de alarma')),
                ('alarm_low_limit', models.FloatField(blank=True, null=True, verbose_name='Límite bajo de alarma')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de actualización')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('server', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.dataserver', verbose_name='Servidor')),
                ('variable_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.variabletype', verbose_name='Tipo de variable')),
            ],
            options={
                'verbose_name': 'Variable de Datos',
                'verbose_name_plural': 'Variables de Datos',
                'ordering': ['server', 'name'],
                'unique_together': {('server', 'address')},
            },
        ),
        migrations.CreateModel(
            name='DataReading',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Marca de tiempo')),
                ('value_boolean', models.BooleanField(blank=True, null=True, verbose_name='Valor boolean')),
                ('value_integer', models.BigIntegerField(blank=True, null=True, verbose_name='Valor entero')),
                ('value_float', models.FloatField(blank=True, null=True, verbose_name='Valor decimal')),
                ('value_string', models.TextField(blank=True, null=True, verbose_name='Valor texto')),
                ('value_datetime', models.DateTimeField(blank=True, null=True, verbose_name='Valor fecha')),
                ('value_json', models.JSONField(blank=True, null=True, verbose_name='Valor JSON')),
                ('quality', models.CharField(choices=[('GOOD', 'Buena'), ('BAD', 'Mala'), ('UNCERTAIN', 'Incierta'), ('TIMEOUT', 'Timeout'), ('ERROR', 'Error')], default='GOOD', max_length=20, verbose_name='Calidad')),
                ('status_code', models.IntegerField(blank=True, null=True, verbose_name='Código de estado')),
                ('error_message', models.TextField(blank=True, null=True, verbose_name='Mensaje de error')),
                ('protocol_metadata', models.JSONField(blank=True, default=dict, verbose_name='Metadatos del protocolo')),
                ('variable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='readings', to='main_app.datavariable', verbose_name='Variable')),
            ],
            options={
                'verbose_name': 'Lectura de Datos',
                'verbose_name_plural': 'Lecturas de Datos',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['variable', '-timestamp'], name='main_app_da_variabl_1b9c6c_idx'), models.Index(fields=['timestamp'], name='main_app_da_timesta_0aaf08_idx'), models.Index(fields=['quality'], name='main_app_da_quality_0499a7_idx')],
            },
        ),
    ]
